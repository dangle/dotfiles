#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

hc keyunbind --all
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Control-Shift-q quit
hc keybind $Mod-Control-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn alacritty

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-Alt-Left    resize left +$resizestep
hc keybind $Mod-Control-Alt-Down    resize down +$resizestep
hc keybind $Mod-Control-Alt-Up      resize up +$resizestep
hc keybind $Mod-Control-Alt-Right   resize right +$resizestep

# tags
mon1_names=( chat gaming windows )
mon2_names=( dev web scratch )
mon3_names=( reference vm )
tag_names=( chat dev reference web scratch gaming windows vm )
tag_keys=( {1..8} )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
# add additional information in order to cycle only through a monitor's tags
# and not through all tags
define-tag-cycle() {
    local n=$#
    local tags=( "$@" )
    for i in "${!tags[@]}" ; do
        local t="${tags[$i]}"
        hc chain , new_attr string tags.by-name."$t".my_previous_tag \
                 , set_attr tags.by-name."$t".my_previous_tag "${tags[$(((i - 1 + n) % n))]}" \
                 , new_attr string tags.by-name."$t".my_next_tag \
                 , set_attr tags.by-name."$t".my_next_tag "${tags[$(((i + 1) % n))]}"
    done
}

define-tag-cycle "${mon1_names[@]}"
define-tag-cycle "${mon2_names[@]}"
define-tag-cycle "${mon3_names[@]}"

# cycle through tags
hc keybind $Mod-Control-Right spawn ~/.config/herbstluftwm/scripts/switch_mouse_tag.sh next
hc keybind $Mod-Control-Left spawn ~/.config/herbstluftwm/scripts/switch_mouse_tag.sh previous
hc keybind $Mod-period or , substitute NEXT tags.focus.my_next_tag use NEXT \
                          , use_index +1 --skip-visible
hc keybind $Mod-comma or , substitute PREV tags.focus.my_previous_tag use PREV \
                         , use_index +1 --skip-visible

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 0
hc set always_show_frame off
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 40

hc attr theme.active.color '#454545'
hc attr theme.normal.color '#111111'
hc attr theme.urgent.color '#FF5555'
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 1

hc attr theme.floating.border_width 1
hc attr theme.floating.outer_width 0
hc attr theme.floating.active.color '#FF5555'
hc attr theme.floating.normal.color '#4776a6'
hc attr theme.floating.padding_right 20

hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set window_gap 10
hc set frame_padding -10
hc set smart_window_surroundings off
hc set smart_frame_surroundings off
hc set mouse_recenter_gap 0

# rules
hc unrule -F
hc rule focus=on # normally focus new clients
hc rule index=e
# give focus to most common terminals
hc rule class~'.*[Tt]ilda.*' manage=off
hc rule class~'.*[Ss]team.*' floating=on
hc rule class~'.*\.exe' floating=on
hc rule class~'.*[Gg]nome-calculator' floating=on
hc rule class~'.*[Gg]nome-screenshot' floating=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

hc set auto_detect_panels off

# unlock, just to be sure
hc unlock

hc set_monitors 3840x1600+0+0 \
3840x1600+0+1600 \
2160x3840+3840+900

hc lock
MONITOR_PADDING=40
for i in $(seq 0 $(( $(hc attr monitors.count) - 1 ))); do
    hc pad $i $MONITOR_PADDING $MONITOR_PADDING $MONITOR_PADDING $MONITOR_PADDING
done
hc unlock

# layouting
hc keybind $Mod-Shift-r remove
hc keybind $Mod-s set_attr clients.focus.floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
#hc keybind $Mod-space                                                           \
#            or , and . compare tags.focus.curframe_wcount = 2                   \
#                     . cycle_layout +1 vertical horizontal max vertical grid    \
#               , cycle_layout +1

spawn_with_rules() {(
    # this rule also requires, that the client
    # sets the _NET_WM_PID property
    herbstclient rule once pid=$BASHPID maxage=2 "${RULES[@]}"
    exec "$@"
    ) &
}

for script in ~/.config/herbstluftwm/keybindings.d/* ; do
	source "$script"
done

if hc silent new_attr bool my_not_first_autostart ; then
    for script in ~/.config/herbstluftwm/autostart.once.d/* ; do
        source "$script"
    done
fi

for script in ~/.config/herbstluftwm/autostart.d/* ; do
	source "$script"
done

hc focus_monitor 1
