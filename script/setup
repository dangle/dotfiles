#!/usr/bin/env bash

function success() {
    local message="> SUCCESS <"
    local padding="$(printf '=%.0s' $(seq $(( ( $(tput cols) - ${#message} ) / 2 ))))"
    local output="$(printf '%s> %s <%s' "${padding}" "SUCCESS" "${padding}")"
    printf "\n\033[1;32m%s\033[0m\n" "${output}"
}

function install_homebrew() {
    if [ ! -d /home/linuxbrew ]; then
        NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        /home/linuxbrew/.linuxbrew/bin/brew update --force --quiet
        /home/linuxbrew/.linuxbrew/bin/brew install glibc
        /home/linuxbrew/.linuxbrew/bin/brew install gcc
    fi

    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
}

function update_pkg_db() {
    if command -v apt-get 2>&1 >/dev/null; then
        sudo apt-get update
        sudo apt-get install -y gpg
        sudo mkdir -p /etc/apt/keyrings
        wget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | sudo gpg --dearmor -o /etc/apt/keyrings/gierens.gpg --yes
        echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" | sudo tee /etc/apt/sources.list.d/gierens.list
        sudo chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list
        curl -SsL https://packages.httpie.io/deb/KEY.gpg | sudo gpg --dearmor -o /usr/share/keyrings/httpie.gpg --yes
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/httpie.gpg] https://packages.httpie.io/deb ./" | sudo tee /etc/apt/sources.list.d/httpie.list > /dev/null
        sudo chmod 644 /usr/share/keyrings/httpie.gpg /etc/apt/sources.list.d/httpie.list
        curl -fsSL https://apt.fury.io/nushell/gpg.key | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/fury-nushell.gpg --yes
	    echo "deb https://apt.fury.io/nushell/ /" | sudo tee /etc/apt/sources.list.d/fury.list
        sudo apt-get update
    elif command -v pacman 2>&1 >/dev/null; then
        sudo pacman -Sy
    else
        install_homebrew
        brew update
    fi
}

function brew_install() {
    for arg in "${@}"; do
        brew list "${arg}" 2>&1 >/dev/null || brew install "${arg}"
    done
}

function install_pkg() {
    if command -v apt-get 2>&1 >/dev/null; then
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y "${@}"
    elif command -v pacman 2>&1 >/dev/null; then
        sudo pacman -S "${@}" --noconfirm
    else
        brew_install "${@}"
    fi
}

if command -v yadm >/dev/null 2>&1 && [ $(yadm rev-parse HEAD) != $(yadm ls-remote $(yadm rev-parse --abbrev-ref @{u} | \
sed 's/\// /g') | cut -f1) ]; then
    echo "Script out of date; updating and restarting script"
    yadm fetch --all
    yadm reset --hard origin/HEAD
    $(realpath ${BASH_SOURCE[0]})
    exit
fi

update_pkg_db

# Install common utils
install_pkg \
    yadm \
    moreutils \
    neovim \
    tmux \
    bat \
    ripgrep \
    entr \
    eza \
    git-absorb \
    chafa \
    exiftool \
    httpie \
    nushell

(git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install --key-bindings --completion --no-update-rc)

if command -v apt-get 2>&1 >/dev/null; then
    mkdir -p ~/.local/bin
    (cd ~/.local/bin && curl -sSLO https://github.com/so-fancy/diff-so-fancy/releases/download/v1.4.4/diff-so-fancy && chmod +x diff-so-fancy)
    curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
    install_pkg fd-find python3
elif command -v pacman 2>&1 >/dev/null; then
    install_pkg fd python diff-so-fancy zoxide
    sudo pacman -Sy python-pynvim --noconfirm
elif ! /home/linuxbrew/.linuxbrew/bin/pip3 list | grep '\bpynvim\b' > /dev/null; then
    /home/linuxbrew/.linuxbrew/bin/pip3 install 'pynvim @ git+https://github.com/neovim/pynvim' --break-system-packages
fi

# Install the Starship Prompt
mkdir -p "${HOME}/.local/bin" && \
    curl -sS https://starship.rs/install.sh | sh -s - --bin-dir "${HOME}/.local/bin" -y

# Set ZSH as default shell
if [[ "$(getent passwd "${USER}" | cut -d : -f 7)" != *"zsh"* ]]; then
    sudo chsh -s /bin/zsh "${USER}" || true
fi

# Install lesspipe.sh
{
    WORK_DIR=$(mktemp -d)
    git clone https://github.com/wofr06/lesspipe.git "${WORK_DIR}"
    pushd "${WORK_DIR}"
    ./configure --prefix "${HOME}/.local/"
    make && make install
    [[ -d ~/.fpath ]] || mkdir ~/.fpath
    cp _less ~/.fpath
    popd
    rm -fr "${WORK_DIR}"
} || true

# Install kubecolor if go exists
if command -v go &>/dev/null; then
  go install github.com/hidetatz/kubecolor/cmd/kubecolor@latest
fi

if [[ "$(cat /proc/self/cgroup)" == "0::/" ]]; then
    yadm config local.class Container
fi

# Clone dotfiles
if [ ! -d ~/.local/share/yadm/repo.git ]; then
    yadm clone -f https://github.com/dangle/dotfiles
    yadm reset --hard HEAD
    yadm alt
fi

# Install vim-plug and plugins
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
nvim +PlugInstall +UpdateRemotePlugins +PlugUpdate +qall

zsh <<EOF
git clone https://github.com/mattmc3/antidote.git ~/.antidote 2>/dev/null || (cd ~/.antidote && git pull)
. ~/.antidote/antidote.zsh
. ~/.zstyle
antidote load
EOF

success
