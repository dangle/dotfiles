#!/usr/bin/env bash

function install_homebrew() {
    if [ ! -d /home/linuxbrew ]; then
        NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        /home/linuxbrew/.linuxbrew/bin/brew update --force --quiet
        /home/linuxbrew/.linuxbrew/bin/brew install glibc
        /home/linuxbrew/.linuxbrew/bin/brew install gcc
    fi

    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
}

function update_pkg_db() {
    if command -v apt-get 2>&1 >/dev/null; then
        sudo apt-get update
        sudo apt-get install -y gpg
        sudo mkdir -p /etc/apt/keyrings
        wget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | sudo gpg --dearmor -o /etc/apt/keyrings/gierens.gpg --yes
        echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" | sudo tee /etc/apt/sources.list.d/gierens.list
        sudo chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list
        curl -SsL https://packages.httpie.io/deb/KEY.gpg | sudo gpg --dearmor -o /usr/share/keyrings/httpie.gpg --yes
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/httpie.gpg] https://packages.httpie.io/deb ./" | sudo tee /etc/apt/sources.list.d/httpie.list > /dev/null
        sudo chmod 644 /etc/apt/keyrings/httpie.gpg /etc/apt/sources.list.d/httpie.list
        sudo apt-get update
    elif command -v pacman 2>&1 >/dev/null; then
        sudo pacman -Sy
    else
        install_homebrew
        brew update
    fi
}

function brew_install() {
    for arg in "${@}"; do
        brew list "${arg}" 2>&1 >/dev/null || brew install "${arg}"
    done
}

function install_pkg() {
    if command -v apt-get 2>&1 >/dev/null; then
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y "${@}"
    elif command -v pacman 2>&1 >/dev/null; then
        sudo pacman -S "${@}" --noconfirm
    else
        brew_install "${@}"
    fi
}

update_pkg_db

# Install common utils
install_pkg \
    yadm \
    neovim \
    tmux \
    bat \
    ripgrep \
    zoxide \
    entr \
    eza \
    git-absorb \
    chafa \
    exiftool \
    httpie

if command -v apt-get 2>&1 >/dev/null; then
    mkdir -p ~/.local/bin
    (cd ~/.local/bin && curl -sSLO https://github.com/so-fancy/diff-so-fancy/releases/download/v1.4.4/diff-so-fancy && chmod +x diff-so-fancy)
    install_pkg fd-find python3
elif command -v pacman 2>&1 >/dev/null; then
    install_pkg fd python diff-so-fancy
    sudo pacman -Sy python-pynvim --noconfirm
elif ! /home/linuxbrew/.linuxbrew/bin/pip3 list | grep '\bpynvim\b' > /dev/null; then
    /home/linuxbrew/.linuxbrew/bin/pip3 install 'pynvim @ git+https://github.com/neovim/pynvim' --break-system-packages
fi

# Set ZSH as default shell
sudo chsh -s /bin/zsh "${USER}" || true

# Install lesspipe.sh
{
    WORK_DIR=$(mktemp -d)
    git clone https://github.com/wofr06/lesspipe.git "${WORK_DIR}"
    cd "${WORK_DIR}"
    ./configure --prefix "${HOME}/.local/"
    make && make install
    [[ -d ~/.fpath ]] || mkdir ~/.fpath
    cp _less ~/.fpath
    rm -fr "${WORK_DIR}"
} || true

# Install kubecolor if go exists
if command -v go &>/dev/null; then
  go install github.com/hidetatz/kubecolor/cmd/kubecolor@latest
fi

if [[ "$(cat /proc/self/cgroup)" == "0::/" ]]; then
    yadm config local.class Container
    echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDWRnIUgFh4FTnSCXySveVrOUCodTyigQNtlyupkIogX9XQADCIMUaFu3DjrTwFTlRiWIsJUWrpUajuZB7g8xs2tWsYZ2JomNENT1AJMu47g4zw0bUeqk35GJPNdLDM/QONTQMRMOF9VaHEN4S/WZjdtbscyOkMHvczVwyAHn62Db7KKLPK8Utci4qgSBPyzHmT7TSjzS81GRIegFum3/HRtyxQwyffK7D7HLctOTfcfThnfzi0i7aQDkrOSV2u7bpJLWfGqEVLOSv2lTpecwIr8uUWHx1+6akcJ0lIaJMOUWJbw0hU0rtUALHFlR0446NH2zE17kFDL+jdb/IEmypLv6Tdnjb/qJq0q3WURjOA8Oxco/aFtAyoCqt5XUgrcfHZeJzso7LY2yjXoNxlY8UtLdZ0dsCPslJi2fveCmxvUdih7CLdzWRbWRA3ZpxqlaGqAPxAP+E8W6BbZge5iXrpbNKR0lSPNswYAlIY1U1aOiGlYU6o4UdCD4Wi0IxaR+ZORk3LZFBna2/GGAJNQKK9cO5SYe7ii77DTaWJtN3S72E2n4GVVnZGoTw6VmhG0Lz4fmy+n7SpZqzGp1yPJc8GDQTaHTFbW3SkrO2s7dbK+8V72PLRTR17+ON/mWwS/EEHZazprLheFdIP3EABIouRR0d09KZvXmdbtpam1xc6OQ== melissa.nuno@gmail.com" > ~/.ssh/authorized_keys
fi

# Clone dotfiles
if [ ! -d ~/.local/share/yadm/repo.git ]; then
    yadm clone -f https://github.com/dangle/dotfiles
    yadm reset --hard HEAD
    yadm alt
fi

# Install vim-plug and plugins
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
nvim +PlugInstall +UpdateRemotePlugins +qall
